{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\r\nimport 'flatpickr/dist/flatpickr.min.css';\r\nimport iziToast from 'izitoast';\r\nimport 'izitoast/dist/css/iziToast.min.css';\r\n\r\nconst btnStart = document.querySelector('button');\r\nconst dateInput = document.querySelector('#datetime-picker');\r\nlet userSelectedDate;\r\nlet currentDate;\r\nlet timeDelta;\r\nlet intervalID;\r\n\r\nconst daysLeft = document.querySelector('[data-days]');\r\nconst hoursLeft = document.querySelector('[data-hours]');\r\nconst minutesLeft = document.querySelector('[data-minutes]');\r\nconst secondsLeft = document.querySelector('[data-seconds]');\r\n\r\nbtnStart.disabled = true;\r\n\r\nconst options = {\r\n  enableTime: true,\r\n  time_24hr: true,\r\n  defaultDate: new Date(),\r\n  minuteIncrement: 1,\r\n  onClose(selectedDates) {\r\n    currentDate = new Date();\r\n    userSelectedDate = selectedDates[0];\r\n    if (currentDate - userSelectedDate > 0) {\r\n      iziToast.show({\r\n        message: 'Please choose a date in the future',\r\n        backgroundColor: '#ef4040',\r\n        messageColor: '#fff',\r\n      });\r\n    }\r\n    btnStart.disabled = currentDate - userSelectedDate > 0;\r\n  },\r\n};\r\n\r\nnew flatpickr(dateInput, options);\r\n\r\nfunction convertMs(ms) {\r\n  const second = 1000;\r\n  const minute = second * 60;\r\n  const hour = minute * 60;\r\n  const day = hour * 24;\r\n\r\n  const days = Math.floor(ms / day);\r\n  const hours = Math.floor((ms % day) / hour);\r\n  const minutes = Math.floor(((ms % day) % hour) / minute);\r\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\r\n\r\n  return { days, hours, minutes, seconds };\r\n}\r\n\r\nbtnStart.addEventListener('click', event => {\r\n  btnStart.disabled = true;\r\n  dateInput.disabled = true;\r\n  intervalID = setInterval(timerRender, 1000);\r\n});\r\n\r\nfunction timerRender() {\r\n  currentDate = new Date();\r\n  timeDelta = userSelectedDate - currentDate;\r\n  const timeDeltaObj = convertMs(timeDelta);\r\n  daysLeft.textContent = String(timeDeltaObj.days).padStart(2, '0');\r\n  hoursLeft.textContent = String(timeDeltaObj.hours).padStart(2, '0');\r\n  minutesLeft.textContent = String(timeDeltaObj.minutes).padStart(2, '0');\r\n  secondsLeft.textContent = String(timeDeltaObj.seconds).padStart(2, '0');\r\n  if (Math.floor((userSelectedDate - Date.now()) / 1000) === 0) {\r\n    clearInterval(intervalID);\r\n    btnStart.disabled = false;\r\n    dateInput.disabled = false;\r\n  }\r\n}\r\n"],"names":["btnStart","dateInput","userSelectedDate","currentDate","timeDelta","intervalID","daysLeft","hoursLeft","minutesLeft","secondsLeft","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","event","timerRender","timeDeltaObj"],"mappings":"6vBAKA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAY,SAAS,cAAc,kBAAkB,EAC3D,IAAIC,EACAC,EACAC,EACAC,EAEJ,MAAMC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DT,EAAS,SAAW,GAEpB,MAAMU,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBR,EAAc,IAAI,KAClBD,EAAmBS,EAAc,CAAC,EAC9BR,EAAcD,EAAmB,GACnCU,EAAS,KAAK,CACZ,QAAS,qCACT,gBAAiB,UACjB,aAAc,MACtB,CAAO,EAEHZ,EAAS,SAAWG,EAAcD,EAAmB,CACtD,CACH,EAEA,IAAIW,EAAUZ,EAAWS,CAAO,EAEhC,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAnB,EAAS,iBAAiB,QAASoB,GAAS,CAC1CpB,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrBI,EAAa,YAAYgB,EAAa,GAAI,CAC5C,CAAC,EAED,SAASA,GAAc,CACrBlB,EAAc,IAAI,KAClBC,EAAYF,EAAmBC,EAC/B,MAAMmB,EAAeR,EAAUV,CAAS,EACxCE,EAAS,YAAc,OAAOgB,EAAa,IAAI,EAAE,SAAS,EAAG,GAAG,EAChEf,EAAU,YAAc,OAAOe,EAAa,KAAK,EAAE,SAAS,EAAG,GAAG,EAClEd,EAAY,YAAc,OAAOc,EAAa,OAAO,EAAE,SAAS,EAAG,GAAG,EACtEb,EAAY,YAAc,OAAOa,EAAa,OAAO,EAAE,SAAS,EAAG,GAAG,EAClE,KAAK,OAAOpB,EAAmB,KAAK,IAAK,GAAI,GAAI,IAAM,IACzD,cAAcG,CAAU,EACxBL,EAAS,SAAW,GACpBC,EAAU,SAAW,GAEzB"}